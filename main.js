document.addEventListener("DOMContentLoaded", () => {

    (() => {
    //If you want to add more images, add the link name and URL image URL in the array list below.
        const images_list = [
    {
        "url": "/imagenes/slide1.png",
        "alt": "",
        "name": "slide1.png",
        "link": ""
    },
    {
        "url": "/imagenes/slide2.png",
        "alt": "",
        "name": "slide2.png",
        "link": ""
    }
        ];
    
    // generated by https://www.html-code-generator.com/html/image-slideshow-generator
        let slider_id = document.querySelector("#carrouselImagenes");
    
        // append all images
        let dots_div = "";
        let images_div = "";
        for (let i = 0; i < images_list.length; i++) {
            // if no link without href="" tag
            let href = (images_list[i].link == "" ? "":' href="'+images_list[i].link+'"');
            images_div += '<a'+href+' class="hcg-slides animated"'+(i === 0 ? ' style="display:flex"':'')+'>'+
                            '<img src="'+images_list[i].url+'" alt="'+images_list[i].name+'">'+
                         '</a>';
        }
        slider_id.querySelector(".hcg-slider-body").innerHTML = images_div;
        let slide_index = 0;
    
        const images = slider_id.querySelectorAll(".hcg-slides");
        const prev_button = slider_id.querySelector("#hcg-slide-prev");
        const next_button = slider_id.querySelector("#hcg-slide-next");
    
        const showSlides = () => {
            if (slide_index > images.length-1) {
                slide_index = 0;
            }
            if (slide_index < 0) {
                slide_index = images.length-1;
            }
            for (let i = 0; i < images.length; i++) {
                images[i].style.display = "none";
                if (i == slide_index) {
                    images[i].style.display = "flex";
                }
            }
        }
    
        prev_button.addEventListener("click", event => {
            event.preventDefault();
            slide_index--;
            showSlides();
        }, false);
    
        next_button.addEventListener("click", event => {
            event.preventDefault();
            slide_index++;
            showSlides();
        }, false);
    
    })();
    

//Carousel Testimonios//
let index = 0;
const images = document.querySelectorAll('.carousel img');

setInterval(() => {
    index++;
    if (index > images.length - 1) {
    index = 0;
    }
    images.forEach(img => {
    img.classList.remove('active');
    });
    images[index].classList.add('active');
}, 10000);

//mensaje de consulta enviada
var contacto_form = document.getElementById("contacto-form");
var formulario_enviado = document.getElementById("formulario-enviado");
var formulario_no_enviado = document.getElementById("fomulario-no-enviado");

var contacto_input = document.getElementById("contacto-input");
var email_input = document.getElementById("email-input");

var enviar_consulta = document.getElementById("boton-enviar");

function mostrar_elemento(ocultar_actual, mostrar_siguiente) {
    ocultar_actual.style.display = "none";
    mostrar_siguiente.style.display = "flex";
}

enviar_consulta.addEventListener("click", function (e) {
    if (contacto_input.value && email_input.value) {
        mostrar_elemento(contacto_form, formulario_enviado)
        e.preventDefault();
    } else{
        formulario_no_enviado.style.display = "flex";
    }

})

//conexión API clima
const form_api = document.getElementById('form-api');
const result = document.getElementById('result');

form_api.addEventListener('submit', function (e){
    e.preventDefault();
    const ciudad = form_api.elements['city'].value;
    const apiKey = '153107839f08772bc125961139738fd5';

    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}&units=metric&lang=es`)
    .then(response => response.json())
    .then(data => {
        const tiempo_descripcion = data.weather[0].description;
        const temperatura = data.main.temp;
        result.innerHTML = `El clima en ${ciudad}: <b>${temperatura}°C.</b> - ${tiempo_descripcion} `;
    })
    .catch(error => {
        console.error(error);
        result.innerHTML = 'Error al obtener el clima.';
    });
});

// formulario cotizacion

var seg = document.getElementById("seg"); // boton siguiente
var prim = document.getElementById("prim"); // boton anterior
prim.classList.add("invisible"); // Se agrega la clase "invisible" al botón anterior para que no sea visible inicialmente
var secCotiz = document.getElementById("cotizacion"); // <seccion> cotizacion
var formsCotiz = secCotiz.querySelectorAll("#form");  // node list de todos los <divs> con id #form de la <seccion> cotizacion

seg.addEventListener("click", () => {  // cuando clikeo el boton siguiente
        
    var formActivo = secCotiz.querySelector(".visible");  // form que tenga clase "visible"
        
    var formSiguiente = secCotiz.querySelector(".visible + .invisible"); // el form que le sigue al que tiene clase visible

    // Si no hay un formulario siguiente, se oculta la sección de botones
    if(formSiguiente === null){
        var divBotones = document.getElementById("botonesCotizacion");
        divBotones.classList.add("invisible");
    }
    
    // Se cambian las clases del formulario activo y el siguiente para que el siguiente se muestre y el activo se oculte
     formActivo.classList.remove("visible");     // le saco la clase visible al primer form que es el que la tiene
     formActivo.classList.add("invisible");     // le doy clase invisible

     formSiguiente.classList.remove("invisible");  // al form siguiente le saco .invisible
     formSiguiente.classList.add("visible");        // y le doy .visible
        
});

prim.addEventListener("click", () => {
    //Se busca el formulario activo en la lista de formularios de cotización
    for (var i = 0; i < formsCotiz.length; i ++){  
   
    //Si el formulario en la posición actual del for tiene la clase "visible", se sale del for   
    if (formsCotiz.item(i).classList.contains("visible") === true){
        break;
    }               // si el elemento en el indice tiene clase visible, salir del for
    }

    var posicionAnterior = i-1; // => la posicion del elemento desactivo anterior al activo

    
    if(posicionAnterior === -1){
        posicionAnterior = formsCotiz.length-1; // => voy a la posicion del ultimo elemento
    } else {
        var divBotones = document.getElementById("botonesCotizacion");
        divBotones.classList.remove("invisible");
    }
    

    formsCotiz.item(i).classList.remove("visible");
    formsCotiz.item(i).classList.add("invisible");

    formsCotiz.item(posicionAnterior).classList.remove("invisible");
    formsCotiz.item(posicionAnterior).classList.add("visible");

});

}); // cierre del DOMcontentloaded